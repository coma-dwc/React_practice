{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fucc1\\\\react-guide-material\\\\06_control_and_form\\\\src\\\\060_conditional_render\\\\start\\\\Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n\n// if文、&&、??　(null合体演算子)、3項演算子項演算子\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const animals = [\"Dog\", \"Cat\", null, \"Rat\"]; //??　(null合体演算子)の確認の為nullを追加\n\n  const [filterVal, setFilterVal] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: filterVal,\n      onChange: e => setFilterVal(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: animals.filter(animal => {\n        const animalStr = animal !== null && animal !== void 0 ? animal : \"\";\n        const isMatch = animal.indexOf(filterVal) !== -1;\n        console.log(animal.indexOf(filterVal));\n        return isMatch;\n      }).map(animal => {\n        //&&条件\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [animal, animal === \"Dog\" && \"★\"]\n        }, animal, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 20\n        }, this);\n\n        // 3項演算子(おすすめ:重複した記述を避けるため メンテナンスしやすい)\n        // return <li key={animal}>{\n        //   animal === \"Dog\" \n        //     ? animal + \"★\" \n        //     : animal\n        //   }</li>;\n\n        // if文\n        // if(animal === \"Dog\") {\n        //   return <li key={animal}>{animal}★</li>\n        // } else {\n        //   return <li key={animal}>{animal}</li>\n        // }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Example, \"KGM+Ikm59FQGD6w+AMK352BswOM=\");\n_c = Example;\nexport default Example;\n\n// 元々の記述\n\n// import { useState } from \"react\";\n\n// const Example = () => {\n//   const animals = [\"Dog\", \"Cat\", \"Rat\"];\n\n//   const [filterVal, setFilterVal] = useState(\"\");\n\n//   return (\n//     <>\n//       <input\n//         type=\"text\"\n//         value={filterVal}\n//         onChange={(e) => setFilterVal(e.target.value)}\n//       />\n//       <ul>\n//         {animals\n//           .filter((animal) => {\n//             const isMatch = animal.indexOf(filterVal) !== -1;\n//             console.log(animal.indexOf(filterVal));\n//             return isMatch;\n//           })\n//           .map((animal) => (\n//             <li key={animal}>{animal}</li>\n//           ))}\n//       </ul>\n//     </>\n//   );\n// };\n\n// export default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Example","_s","animals","filterVal","setFilterVal","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","filter","animal","animalStr","isMatch","indexOf","console","log","map","_c","$RefreshReg$"],"sources":["C:/Users/fucc1/react-guide-material/06_control_and_form/src/060_conditional_render/start/Example.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n// if文、&&、??　(null合体演算子)、3項演算子項演算子\r\nconst Example = () => {\r\n  const animals = [\"Dog\", \"Cat\", null, \"Rat\"];  //??　(null合体演算子)の確認の為nullを追加\r\n\r\n  const [filterVal, setFilterVal] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"text\"\r\n        value={filterVal}\r\n        onChange={(e) => setFilterVal(e.target.value)}\r\n      />\r\n      <ul>\r\n        {animals\r\n          .filter((animal) => {\r\n            const animalStr = animal ?? \"\"\r\n            const isMatch = animal.indexOf(filterVal) !== -1;\r\n            console.log(animal.indexOf(filterVal));\r\n            return isMatch;\r\n          })\r\n          .map((animal) => {\r\n            //&&条件\r\n            return <li key={animal}>{\r\n              animal\r\n              }{animal === \"Dog\" && \"★\"}</li>;\r\n\r\n            // 3項演算子(おすすめ:重複した記述を避けるため メンテナンスしやすい)\r\n            // return <li key={animal}>{\r\n            //   animal === \"Dog\" \r\n            //     ? animal + \"★\" \r\n            //     : animal\r\n            //   }</li>;\r\n\r\n            // if文\r\n            // if(animal === \"Dog\") {\r\n            //   return <li key={animal}>{animal}★</li>\r\n            // } else {\r\n            //   return <li key={animal}>{animal}</li>\r\n            // }\r\n          })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n\r\n// 元々の記述\r\n\r\n// import { useState } from \"react\";\r\n\r\n// const Example = () => {\r\n//   const animals = [\"Dog\", \"Cat\", \"Rat\"];\r\n\r\n//   const [filterVal, setFilterVal] = useState(\"\");\r\n\r\n//   return (\r\n//     <>\r\n//       <input\r\n//         type=\"text\"\r\n//         value={filterVal}\r\n//         onChange={(e) => setFilterVal(e.target.value)}\r\n//       />\r\n//       <ul>\r\n//         {animals\r\n//           .filter((animal) => {\r\n//             const isMatch = animal.indexOf(filterVal) !== -1;\r\n//             console.log(animal.indexOf(filterVal));\r\n//             return isMatch;\r\n//           })\r\n//           .map((animal) => (\r\n//             <li key={animal}>{animal}</li>\r\n//           ))}\r\n//       </ul>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Example;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,OAAO,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAE;;EAE9C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,oBACEE,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MACES,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEJ,SAAU;MACjBK,QAAQ,EAAGC,CAAC,IAAKL,YAAY,CAACK,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFjB,OAAA;MAAAQ,QAAA,EACGH,OAAO,CACLa,MAAM,CAAEC,MAAM,IAAK;QAClB,MAAMC,SAAS,GAAGD,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI,EAAE;QAC9B,MAAME,OAAO,GAAGF,MAAM,CAACG,OAAO,CAAChB,SAAS,CAAC,KAAK,CAAC,CAAC;QAChDiB,OAAO,CAACC,GAAG,CAACL,MAAM,CAACG,OAAO,CAAChB,SAAS,CAAC,CAAC;QACtC,OAAOe,OAAO;MAChB,CAAC,CAAC,CACDI,GAAG,CAAEN,MAAM,IAAK;QACf;QACA,oBAAOnB,OAAA;UAAAQ,QAAA,GACLW,MAAM,EACJA,MAAM,KAAK,KAAK,IAAI,GAAG;QAAA,GAFXA,MAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEU,CAAC;;QAEjC;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;MACF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eACL,CAAC;AAEP,CAAC;AAACb,EAAA,CA3CID,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AA6Cb,eAAeA,OAAO;;AAEtB;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}