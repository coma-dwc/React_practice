{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fucc1\\\\react-guide-material\\\\05_state_and_event\\\\src\\\\055_practice_state\\\\start\\\\Example.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u7DF4\\u7FD2\\u554F\\u984C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u73FE\\u5728\\u306E\\u30AB\\u30A6\\u30F3\\u30C8\\u6570: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countUp,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countDown,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Example;\nexport default Example;\n\n// 元々の記述\n\n// const Example = () => {\n//   return (\n//     <>\n//       <h3>練習問題</h3>\n//       <p>\n//         記述を変更し、完成コードのように+と-ボタンをクリックすると現在のカウント数が1ずつ増減する機能を実装してください。*useStateを用いてcountとsetCountを定義してください。\n//       </p>\n//       <p>現在のカウント数: {/* ここにcountを表示してください。*/}</p>\n//       <button>+</button>\n//       <button>-</button>\n//     </>\n//   );\n// };\n\n// export default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["Example","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","count","onClick","countUp","countDown","_c","$RefreshReg$"],"sources":["C:/Users/fucc1/react-guide-material/05_state_and_event/src/055_practice_state/start/Example.js"],"sourcesContent":["const Example = () => {\r\n  return (\r\n    <>\r\n      <h3>練習問題</h3>\r\n\r\n      <p>現在のカウント数: {count}</p>\r\n      <button\r\n        onClick={countUp}\r\n        >+</button>\r\n\r\n      <button\r\n        onClick={countDown}\r\n      >-</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n\r\n\r\n// 元々の記述\r\n\r\n// const Example = () => {\r\n//   return (\r\n//     <>\r\n//       <h3>練習問題</h3>\r\n//       <p>\r\n//         記述を変更し、完成コードのように+と-ボタンをクリックすると現在のカウント数が1ずつ増減する機能を実装してください。*useStateを用いてcountとsetCountを定義してください。\r\n//       </p>\r\n//       <p>現在のカウント数: {/* ここにcountを表示してください。*/}</p>\r\n//       <button>+</button>\r\n//       <button>-</button>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Example;"],"mappings":";;;AAAA,MAAMA,OAAO,GAAGA,CAAA,KAAM;EACpB,oBACEC,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACEF,OAAA;MAAAE,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEbN,OAAA;MAAAE,QAAA,GAAG,oDAAU,EAACK,KAAK;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBN,OAAA;MACEQ,OAAO,EAAEC,OAAQ;MAAAP,QAAA,EAChB;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEbN,OAAA;MACEQ,OAAO,EAAEE,SAAU;MAAAR,QAAA,EACpB;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACX,CAAC;AAEP,CAAC;AAACK,EAAA,GAfIZ,OAAO;AAiBb,eAAeA,OAAO;;AAGtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}